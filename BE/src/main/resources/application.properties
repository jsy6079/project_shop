spring.application.name=BE

# 내장 톰캣 서버 설정
server.port=8080
server.servlet.context-path=/

# 개발환경 -> 배포 시 제거하기
spring.profiles.active=dev

# DataSource 설정
spring.datasource.url=jdbc:mysql://localhost:3306/project_shop
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#JPA 설정 (나중에 이거 다시 활성화)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

#JPA 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Hibernate SQL 로그 비활성화
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF


# 카카오 OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-id=faf66baf81767443fb366c81ac9da085
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.provider=kakao

# 카카오 Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


#jwt 토큰

# jwt 토큰 시크릿 값
spring.jwt.secret=vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb

# 1. 기존 엑세스 토큰 만료 시간 (30초 = 30000) (1시간 = 3600000)
spring.jwt.expiration=3600000 
# 2. 기존 리프레시 토큰 만료 시간 (1분 = 60000) (1일 = 86400000)
spring.jwt.refresh-expiration=86400000
# 3. 리프레시로 발급받은 엑세스 토큰 만료 시간 (30초 = 30000) (1시간 = 3600000)
spring.jwt.refresh-issued-expiration=3600000

# 4. 엑세스 토큰 쿠키 만료 시간 (로그인 할 때) (30초 = 30) (1시간 = 3600)
spring.jwt.access-cookie-expiration=3600
# 5. 리프레시 토큰 쿠키 만료 시간 (로그인 할 때) (1분 = 60) (1일 = 86400)
spring.jwt.refresh-cookie-expiration=86400
# 6. 리프레시로 발급받은 엑세스 토큰의 쿠키 만료 시간 (만료 후 새로 재발급 받을 때)(1시간 = 3600)
spring.jwt.refresh-issued-access-cookie-expiration=3600




